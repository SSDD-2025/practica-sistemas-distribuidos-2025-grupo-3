openapi: 3.1.0
info:
  title: OpenAPI definition
  version: v0
servers:
- url: https://localhost:8443
  description: Generated server url
paths:
  /api/users/{id}:
    put:
      tags:
      - user-rest-controller
      operationId: putUser
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserDTOBasic"
        required: true
      responses:
        "413":
          description: Payload Too Large
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/UserDTOBasic"
    delete:
      tags:
      - user-rest-controller
      operationId: deleteUser
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "413":
          description: Payload Too Large
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/UserDTOBasic"
  /api/communities/{id}:
    get:
      tags:
      - comunity-rest-controller
      operationId: getCommunity
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "413":
          description: Payload Too Large
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/CommunityDTO"
    put:
      tags:
      - comunity-rest-controller
      operationId: replaceCommunity
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CommunityDTOBasic"
        required: true
      responses:
        "413":
          description: Payload Too Large
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/CommunityDTOBasic"
    delete:
      tags:
      - comunity-rest-controller
      operationId: deleteCommunity
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "413":
          description: Payload Too Large
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/CommunityDTO"
  /api/users/:
    get:
      tags:
      - user-rest-controller
      operationId: getAllUsers
      responses:
        "413":
          description: Payload Too Large
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/UserDTOBasic"
    post:
      tags:
      - user-rest-controller
      operationId: postUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserDTOBasic"
        required: true
      responses:
        "413":
          description: Payload Too Large
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/UserDTOBasic"
  /api/posts/:
    get:
      tags:
      - post-rest-controller
      operationId: getAllPosts
      responses:
        "413":
          description: Payload Too Large
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/PostDTORest"
    post:
      tags:
      - post-rest-controller
      operationId: postCommumnnity
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PostDTORest"
        required: true
      responses:
        "413":
          description: Payload Too Large
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/PostDTORest"
  /api/communities/:
    get:
      tags:
      - comunity-rest-controller
      operationId: getComunities
      responses:
        "413":
          description: Payload Too Large
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/CommunityDTOBasic"
    post:
      tags:
      - comunity-rest-controller
      operationId: postCommumnnity_1
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CommunityDTO"
        required: true
      responses:
        "413":
          description: Payload Too Large
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/CommunityDTO"
  /api/comments/:
    get:
      tags:
      - comment-rest-controller
      operationId: getAllComments
      responses:
        "413":
          description: Payload Too Large
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/CommentDTO"
    post:
      tags:
      - comment-rest-controller
      operationId: postComment
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CommentDTO"
        required: true
      responses:
        "413":
          description: Payload Too Large
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/CommentDTO"
  /api/auth/refresh:
    post:
      tags:
      - login-controller
      operationId: refreshToken
      parameters:
      - name: RefreshToken
        in: cookie
        required: false
        schema:
          type: string
      responses:
        "413":
          description: Payload Too Large
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/AuthResponse"
  /api/auth/logout:
    post:
      tags:
      - login-controller
      operationId: logOut
      responses:
        "413":
          description: Payload Too Large
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/AuthResponse"
  /api/auth/login:
    post:
      tags:
      - login-controller
      operationId: login
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LoginRequest"
        required: true
      responses:
        "413":
          description: Payload Too Large
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/AuthResponse"
  /api/posts/{id}:
    get:
      tags:
      - post-rest-controller
      operationId: getPost
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "413":
          description: Payload Too Large
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/PostDTORest"
    delete:
      tags:
      - post-rest-controller
      operationId: deletePost
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "413":
          description: Payload Too Large
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/PostDTORest"
  /api/comments/{id}:
    get:
      tags:
      - comment-rest-controller
      operationId: getCommentsByUsername
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "413":
          description: Payload Too Large
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/CommentDTO"
    delete:
      tags:
      - comment-rest-controller
      operationId: deleteComment
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "413":
          description: Payload Too Large
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
components:
  schemas:
    UserDTOBasic:
      type: object
      properties:
        id:
          type: integer
          format: int64
        username:
          type: string
        email:
          type: string
        password:
          type: string
        date:
          type: string
    CommunityDTOBasic:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
    PostDTORest:
      type: object
      properties:
        id:
          type: integer
          format: int64
        title:
          type: string
        postContent:
          type: string
        creationDate:
          type: string
        owner:
          $ref: "#/components/schemas/UserDTORest"
        community:
          $ref: "#/components/schemas/CommunityDTOBasic"
    UserDTORest:
      type: object
      properties:
        id:
          type: integer
          format: int64
        username:
          type: string
    CommunityDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        posts:
          type: array
          items:
            $ref: "#/components/schemas/PostDTORest"
    CommentDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
        commentContent:
          type: string
        postId:
          type: integer
          format: int64
        owner:
          $ref: "#/components/schemas/UserDTORest"
    AuthResponse:
      type: object
      properties:
        status:
          type: string
          enum:
          - SUCCESS
          - FAILURE
        message:
          type: string
        error:
          type: string
    LoginRequest:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
